{"version":3,"sources":["FilterDropdown.jsx","index.jsx"],"names":["withStreamlitConnection","props","Option","Select","data","args","field","options","containerRef","useRef","useState","height","setHeight","value","setValue","dropdown","setDropdown","i","length","push","key","useEffect","current","offsetHeight","dropdown_height","console","log","Streamlit","setFrameHeight","handleHeightChange","className","ref","dropdownClassName","mode","allowClear","showArrow","size","style","width","placeholder","defaultValue","onChange","setComponentValue","onDropdownVisibleChange","open","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAkEeA,G,MAAAA,aA7DQ,SAACC,GAWpB,IAVA,IAAOC,EAAUC,IAAVD,OACDE,EAAOH,EAAMI,KAAKD,KAClBE,EAAQL,EAAMI,KAAKC,MACnBC,EAAU,GAEVC,EAAeC,iBAAO,MAC5B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAESC,EAAI,EAAGA,EAAIb,EAAKc,OAAQD,IAC7BV,EAAQY,KAAK,kBAACjB,EAAD,CAAQkB,IAAKhB,EAAKa,IAAKb,EAAKa,KA4B7C,OAhBAI,qBAAU,YACN,WACI,IAAIV,EAASH,EAAac,QAAQC,aAClC,GAAIR,EAAU,CACV,IAAIS,EAAkB,GAAGjB,EAAQW,OAAO,GAExCP,GADAa,EAAkBA,EAAkB,IAAM,IAAWA,EAGzDC,QAAQC,IAAIf,GACZC,EAAUD,GACVgB,IAAUC,eAAejB,GAG7BkB,KACD,CAAClB,EAAQE,EAAOE,EAAUR,EAAQW,SAGjC,yBAAKY,UAAU,2BAA2BC,IAAKvB,GAC3C,kBAAC,IAAD,CACIwB,kBAAkB,iBAClBC,KAAK,WACLC,YAAU,EACVC,WAAW,EACXC,KAAQ,QACRC,MAAO,CAAEC,MAAO,QAChBC,YAAa,UAAYjC,EACzBkC,aAAc,GACdC,SApCZ,SAA2B5B,GACvBC,EAASD,GACTc,IAAUe,kBAAkB7B,IAmCpB8B,wBAhCZ,SAA8BC,GAC1B5B,EAAY4B,KAiCHrC,Q,OCrDjBsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9d115e47.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Streamlit, withStreamlitConnection, } from \"streamlit-component-lib\";\nimport { Select} from \"antd\";\nimport \"./FilterDropdown.css\";\n\nconst FilterDropdown = (props) => {\n    const {Option} = Select;\n    const data = props.args.data;\n    const field = props.args.field;\n    const options = [];\n\n    const containerRef = useRef(null);\n    const [height, setHeight] = useState(24);\n    const [value, setValue] = useState([]);\n    const [dropdown, setDropdown] = useState(false);\n\n    for (let i = 0; i < data.length; i++) {\n        options.push(<Option key={data[i]}>{data[i]}</Option>);\n    }\n\n    function handleValueChange(value) {\n        setValue(value);\n        Streamlit.setComponentValue(value);\n    }\n\n    function handleDropdownChange(open) {\n        setDropdown(open);\n    }\n\n    useEffect(() => {\n        function handleHeightChange(){\n            let height = containerRef.current.offsetHeight; \n            if (dropdown) {\n                let dropdown_height = 32*options.length+30;\n                dropdown_height = dropdown_height > 256 ? 256 + 30 : dropdown_height;\n                height += dropdown_height;\n            }\n            console.log(height);\n            setHeight(height);\n            Streamlit.setFrameHeight(height);\n        }\n\n        handleHeightChange();\n    }, [height, value, dropdown, options.length]);\n\n    return (\n        <div className=\"filterdropdown-container\" ref={containerRef}>\n            <Select\n                dropdownClassName=\"filterdropdown\"\n                mode=\"multiple\"\n                allowClear\n                showArrow={true}\n                size = {\"small\"}\n                style={{ width: '100%'}}\n                placeholder={\"Select \" + field} \n                defaultValue={[]}\n                onChange={handleValueChange}\n                onDropdownVisibleChange={handleDropdownChange}\n            >\n                {options}\n            </Select>\n        </div>\n    )\n}\n\n// Export component\nexport default withStreamlitConnection(FilterDropdown)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport FilterDropdown from \"./FilterDropdown\"\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <FilterDropdown />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}
{"version":3,"sources":["GaugeChart.jsx","index.jsx"],"names":["setCenter","svgWidth","svgHeight","margin","center","bottom","setRadii","thickness","radii","base","left","right","setAngles","arc","pi","rotation","rad","angles","arc_complement","setTicks","u_ticks","max_pct","sub_arc","end_angle","start_angle","tick_pct","d3","map","d","sub_angle","label","formatPercent","angle","coordinates","inner","outer_tick","setGradient","color_scheme","color_step","samples","color","domain","interpolate","range","sub_color","sub_start_angle","sub_end_angle","fill","start","end","setScales","scales","innerRadius","outerRadius","outer","startAngle","endAngle","get_client_dimensions","clientsWidth","clientsHeight","window","innerWidth","innerHeight","document","documentElement","clientWidth","clientHeight","body","formatPercentLegend","withStreamlitConnection","props","args","data","ticks","tick_color","needle_color","dimensions","width","useState","setWidth","ticks_font_size","label_font_size","parseFloat","top","setHeight","svgRef","useRef","Streamlit","setFrameHeight","current","style","Math","PI","deg","needlePercent","gauge_ticks","gradient","useEffect","addEventListener","svgElement","append","classed","select","selectAll","join","enter","attr","x","y","subArcScale","call","el","transition","duration","update","lineRadial","rot_angle","tick_label","sin","cos","text","needleScale","cap","className","ref","fontSize","fontWeight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c16a576d.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\nimport { Streamlit, withStreamlitConnection,} from \"streamlit-component-lib\";\nimport * as d3 from \"d3\";\nimport './GaugeChart.css';\n\n// Create GaugeChart component\nconst GaugeChart = (props) => {\n  const {data, rotation, thickness, arc, ticks, color_scheme, color_step, tick_color, needle_color} = props.args;\n  if(data[2] > data[1]) {\n    data[1] = data[2];\n  }\n\n  const max_width = 250;\n  const aspectRatio = 0.35;\n  let dimensions = get_client_dimensions();\n  let width = dimensions.width > max_width ? max_width : dimensions.width;\n  const [svgWidth, setWidth ] = useState(width);\n  \n  let ticks_font_size = `${11+5*svgWidth/1000}px`;\n  let caption_font_size  = `${10+5*svgWidth/400}px`;\n  let label_font_size = caption_font_size;\n  const margin = {\"top\":5*parseFloat(ticks_font_size), \"bottom\": 1.25*parseFloat(ticks_font_size), \"left\": 2*parseFloat(ticks_font_size), \"right\": 2*parseFloat(ticks_font_size)};\n  const [svgHeight, setHeight ] = useState(aspectRatio*svgWidth + margin.top);\n  \n  const svgRef = useRef(null);\n  Streamlit.setFrameHeight(svgHeight + 2*parseFloat(label_font_size));\n  d3.select(svgRef.current).style(\"width\", svgWidth).style(\"height\", svgHeight);\n\n  const transitionMillisec = 1200;\n\t\n  // Get properties\n  const pi = Math.PI;\n  const rad = pi / 180;\n  const deg = 180 / pi;\n\t\n  // Set svg values\n  let needlePercent = data[2],\n      center = setCenter(svgWidth, svgHeight, margin),\n      radii = setRadii(svgWidth, margin, thickness),\n      angles = setAngles(arc, pi, rotation, rad),\n      gauge_ticks = setTicks(angles, ticks, radii, data[1]),\n      gradient = setGradient(color_scheme, color_step, angles),\n      scales = setScales(radii, angles, data[1]);\n\n  // Set svgHeight and update it on window resize\n  useEffect(() => {\n    const handleResize = () =>{\n      let dimensions = get_client_dimensions();\n      let width = dimensions.width > max_width ? max_width : dimensions.width;\n      setWidth(width);\n      setHeight( aspectRatio*svgWidth + margin.top);\n    }\n    \n    Streamlit.setFrameHeight(svgHeight + 2*parseFloat(label_font_size));\n    d3.select(svgRef.current).style(\"width\", svgWidth).style(\"height\", svgHeight);\n    window.addEventListener('resize', handleResize)\n  }, [svgWidth, svgHeight, aspectRatio, margin.top, label_font_size]);\n    \n  // On mount, create group containers for circles, path and both axis\n  useEffect(() => {\n    const svgElement = d3.select(svgRef.current);\n    svgElement.append(\"g\").classed(\"gauge-arc\", true);\n    svgElement.append(\"g\").classed(\"gauge-ticks\", true);\n    svgElement.append(\"g\").classed(\"needle\", true);\n    svgElement.append(\"g\").classed(\"needle-circle\", true);\n    svgElement.append(\"g\").classed(\"caption\", true);\n  }, []);\n\n  // Hook to create / update gauge \n  useEffect(() => {\n    const svgElement = d3.select(svgRef.current);\n    \n    svgElement.select(\".gauge-arc\").selectAll(\"path\")\n\t    .data(gradient)\n\t    .join(enter => enter.append(\"path\").attr(\"transform\", `translate(${center.x}, ${center.y})`)\n\t\t\t        .attr(\"d\", scales.subArcScale)\n\t\t\t        .attr(\"fill\", (d) => d.fill)\n\t\t\t        .attr(\"stroke-width\", 0.5)\n\t\t\t        .attr(\"stroke\", (d) => d.fill)\n\t\t\t        .call(el => el.transition().duration(transitionMillisec).attr(\"opacity\", 1)),\n\t\t        update => update.attr(\"opacity\", 0)\n\t\t\t\t      .call(el => el.transition().duration(transitionMillisec)\n                .attr(\"transform\", `translate(${center.x}, ${center.y})`)\n\t\t\t\t\t      .attr(\"d\", scales.subArcScale)\n\t\t\t\t\t      .attr(\"opacity\", 1)),\n\t    );\n\t\t\n    svgElement.select(\".gauge-ticks\").selectAll(\"path\")\n\t    .data(gauge_ticks)\n\t    .join(enter => enter.append(\"path\")\n              .attr(\"transform\", `translate(${center.x}, ${center.y})`)\n\t\t\t        .attr(\"d\", (d) => scales.lineRadial(d.coordinates))\n\t\t\t        .attr(\"stroke\", tick_color)\n\t\t\t        .attr(\"stroke-width\", 2)\n\t\t\t        .attr(\"stroke-linecap\", \"round\")\n\t\t\t        .attr(\"fill\", \"none\")\n\t\t\t        .call(el => el.transition().duration(transitionMillisec).attr(\"opacity\", 1)),\n\t\t        update => update.attr(\"opacity\", 0)\n\t\t\t\t      .call(el => el.transition().duration(transitionMillisec)\n              .attr(\"transform\", `translate(${center.x}, ${center.y})`)\n\t\t\t\t\t      .attr(\"d\", (d) => scales.lineRadial(d.coordinates))\n\t\t\t\t\t      .attr(\"opacity\", 1)),\n\t    );\n\n    svgElement.select(\".gauge-ticks\").selectAll(\"text\")\n\t    .data(gauge_ticks)\n\t    .join(enter => enter.append(\"text\")\n\t\t\t        .attr(\"transform\", (d) => {\n\t\t\t\t        let rot_angle = d.angle * deg - pi;\n\t\t\t\t        // if ([angles.start_angle, angles.end_angle].includes(d.angle)) rot_angle = 0;\n\t\t\t\t        return `translate(${center.x + (radii.tick_label * Math.sin(d.angle))}, ${center.y + (-radii.tick_label * Math.cos(d.angle))}) rotate(${rot_angle})`\n\t\t\t        })\n\t\t\t        .attr(\"dy\", \"0.35em\")\n\t\t\t        .attr(\"text-anchor\", \"middle\")\n\t\t\t        .attr(\"font-size\", ticks_font_size)\n\t\t\t        .text((d) => d.label)\n\t\t\t        .call(el => el.transition().duration(transitionMillisec).attr(\"opacity\", 1)),\n\t\t        update => update.attr(\"opacity\", 0)\n\t\t\t\t      .call(el => el.transition().duration(transitionMillisec)\n\t\t\t\t\t      .attr(\"transform\", (d) => {\n\t\t\t\t\t\t      let rot_angle = d.angle * deg - pi;\n\t\t\t\t\t\t      // if ([angles.start_angle, angles.end_angle].includes(d.angle)) rot_angle = 0;\n\t\t\t\t\t\t      return `translate(${center.x + (radii.tick_label * Math.sin(d.angle))}, ${center.y + (-radii.tick_label * Math.cos(d.angle))}) rotate(${rot_angle})`\n\t\t\t\t\t      })\n\t\t\t\t\t.text((d) => d.label)\n\t\t\t\t\t .attr(\"opacity\", 1)),\n\t\t\t);\n\t\t\n    svgElement.select(\".needle\").selectAll(\"path\")\n\t    .data([needlePercent])\n\t    .join(enter => enter.append(\"path\")\n              .attr(\"transform\", `translate(${center.x}, ${center.y})`)\n              .attr(\"d\", (d) => scales.lineRadial([[0,0], [scales.needleScale(d), radii.outer_tick]]))\n\t\t\t        .attr(\"stroke\", needle_color)\n\t\t\t        .attr(\"stroke-width\", 3)\n\t\t\t        .attr(\"stroke-linecap\", \"round\")\n\t\t\t        .attr(\"fill\", \"white\")\n\t\t\t        .call(el => el.transition().duration(transitionMillisec).attr(\"opacity\", 1)),\n\t\t        update => update.attr(\"opacity\", 0)\n\t\t\t\t      .call(el => el.transition().duration(transitionMillisec)\n              .attr(\"transform\", `translate(${center.x}, ${center.y})`)\n\t\t\t\t\t      .attr(\"d\", (d) => scales.lineRadial([[0,0], [scales.needleScale(d), radii.outer_tick]]))\n\t\t\t\t\t      .attr(\"opacity\", 1)),\n\t    );\n\t\t\n    svgElement.select(\".needle-circle\").selectAll(\"circle\")\n      .data([0])\n\t    .join(enter=> enter.append(\"circle\")\n              .attr(\"cx\", center.x)\n\t\t\t        .attr(\"cy\", center.y)\n\t\t\t        .attr('r', radii.cap)\n              .attr(\"stroke\", needle_color)\n              .attr(\"stroke-width\", 3)\n              .attr(\"fill\", \"white\")\n              .call(el => el.transition().duration(transitionMillisec).attr(\"opacity\", 1)),\n            update => update.attr(\"opacity\", 0)\n              .attr(\"stroke\", needle_color)\n              .attr(\"stroke-width\", 3)\n              .attr(\"fill\", \"white\")\n              .call(el => el.transition().duration(transitionMillisec)\n                .attr(\"cx\", center.x)\n                .attr(\"cy\", center.y)\n                .attr('r', radii.cap)\n                .attr(\"opacity\", 1)),\n\t      );\n\n/*     svgElement.select(\".caption\").selectAll(\"text\")\n      .data([0])\n      .join(enter => enter.append(\"text\")\n\t      .attr(\"transform\", `translate(${center.x}, ${svgHeight-parseFloat(caption_font_size)} )`)\n\t      .attr(\"fill\", \"#F77F00\")\n\t      .attr(\"font-weight\", \"bold\")\n              .attr(\"text-anchor\", \"middle\")\n\t      .attr(\"font-size\", caption_font_size)\n\t      .text(`14-Day Positivity Rate: ${formatPercent(data[2])}`)\n\t      .call(el => el.transition().duration(transitionMillisec).attr(\"opacity\", 1)),\n            update => update.attr(\"opacity\", 0)\n              .call(el => el.transition().duration(transitionMillisec)\n\t\t\t    .attr(\"transform\", `translate(${center.x}, ${svgHeight-parseFloat(caption_font_size)})`)\n\t\t\t    .attr(\"font-size\", caption_font_size)\n\t\t\t    .text(`14-Day Positivity Rate: ${formatPercent(data[2])}`)\n                           .attr(\"opacity\", 1))\n      ); */\n\t});\n\n    return (\n      <>\n        <div className=\"gaugechart-container\">\n          <div><svg className=\"gaugechart-svg\"  ref={svgRef}/></div>\n        </div>\n        <div className=\"legend-container\" >\n          <p style={{fontSize:label_font_size}}>\n            14-day case positivity rate: <span style={{color:\"#F77F00\", fontWeight:\"bold\"}}>{formatPercentLegend(data[2])}</span>\n          </p>\n        </div>\n      </>\n    )\n    \n}\n\n// Build svg values\nconst setCenter = (svgWidth, svgHeight, margin) => {\n  let center = {};\n  \n  center[\"x\"] = svgWidth / 2;\n  center[\"y\"] = svgHeight - margin.bottom;\n  \n  return center\n}\n\nconst setRadii = (svgWidth, margin, thickness) => {\n  let radii = {};\n  let base = svgWidth - margin.left - margin.right;\n  \n  radii[\"base\"] = base;\n  radii[\"cap\"] = base/20;\n  radii[\"inner\"] = (base/2) - (base*thickness/2);\n  radii[\"outer\"] = base/2;\n  radii[\"outer_tick\"] = (base/2) + 5;\n  radii[\"tick_label\"] = (base/2) + 15;\n  \n  return radii\n}\n\nconst setAngles = (arc, pi, rotation, rad) => {\n  let angles = {};\n  let arc_complement = 1 - arc;\n  \n  angles[\"arc_complement\"] = arc_complement;\n  angles[\"start_angle\"] = (-pi / 2);\n  angles[\"end_angle\"] = pi / 2;\n  \n  return angles\n}\n\nconst setTicks = (angles, u_ticks, radii, max_pct) => {\n  let sub_arc = (angles.end_angle - angles.start_angle) / (u_ticks - 1),\n      tick_pct = max_pct / (u_ticks - 1);\n\t\n  const gauge_ticks = d3.range(u_ticks).map( (d) => {\n    let sub_angle = angles.start_angle + (sub_arc * d);\n    return {\n      label: formatPercent(tick_pct * d),\n      angle: sub_angle,\n      coordinates: [[sub_angle, radii.inner],  [sub_angle, radii.outer_tick]]\n    }\n  });\n  \n  return gauge_ticks\n}\n\nconst setGradient = (color_scheme, color_step, angles) => {\n  let  samples = color_step,\n      total_arc = angles.end_angle - angles.start_angle,\n      sub_arc = total_arc / (samples);\n\n  let color = d3.scaleLinear().domain([0, 1])\n\t\t.interpolate(d3.interpolateHcl)\n\t\t.range([ d3.rgb('#09ab3b'), d3.rgb(\"#ff006e\")]);\n  \n  const gradient = d3.range(samples).map( (d) => {\n    let sub_color = d / (samples - 1),\n\tsub_start_angle = angles.start_angle + (sub_arc * d),\n\tsub_end_angle = sub_start_angle + sub_arc;\n    return {\n      fill: color(sub_color),\n      start: sub_start_angle,\n      end: sub_end_angle\n    }\n  });\n  \n  return gradient\n}\n\nconst setScales = (radii, angles, max_pct) => {\n  let scales = {};\n  \n  scales[\"lineRadial\"] = d3.lineRadial();\n  \n  scales[\"subArcScale\"] = d3.arc()\n\t\t\t    .innerRadius(radii.inner + 1)\n\t\t\t    .outerRadius(radii.outer)\n\t\t\t    .startAngle((d) => d.start)\n\t\t\t    .endAngle((d) => d.end);\n\n  scales[\"needleScale\"] = d3.scaleLinear()\n\t\t\t    .domain([0, max_pct])\n\t\t\t    .range([angles.start_angle, angles.end_angle]);\n\t\n  return scales\n}\n\n\n// Get client's window dimensions\nfunction get_client_dimensions() {\n  let clientsWidth = 0, clientsHeight = 0;\n  if( typeof( window.innerWidth ) == 'number' ) {\n    //Non-IE\n    clientsWidth = window.innerWidth;\n    clientsHeight = window.innerHeight;\n  } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {\n    //IE 6+ in 'standards compliant mode'\n    clientsWidth = document.documentElement.clientWidth;\n    clientsHeight = document.documentElement.clientHeight;\n  } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {\n    //IE 4 compatible\n    clientsWidth = document.body.clientWidth;\n    clientsHeight = document.body.clientHeight;\n  }\n  return {'width':clientsWidth, 'height': clientsHeight };\n}\n\nconst formatPercent = d3.format(\".1%\");\nconst formatPercentLegend = d3.format(\".2%\");\n\n  \n// Export component  \nexport default withStreamlitConnection(GaugeChart)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport GaugeChart from \"./GaugeChart\"\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GaugeChart />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}